{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/lib/validators.js"],"sourcesContent":["import { z } from 'zod';\n\nexport const redirectUrlSchema = z.object({\n  redirectUrl: z.string().url('Please enter a valid URL'),\n  cookieParamIndex: z.number().nullable(),\n  queryParams: z.array(z.object({\n    name: z.string().min(1, 'Parameter name is required'),\n    value: z.string().min(1, 'Parameter value is required'),\n    isMacro: z.boolean(),\n  })),\n});\n\n/**\n * Validates a URL string\n * @param {string} url - URL to validate\n * @returns {boolean} - Whether the URL is valid\n */\nexport function isValidUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Validates query parameter name\n * @param {string} paramName - Parameter name to validate\n * @returns {boolean} - Whether the parameter name is valid\n */\nexport function isValidParamName(paramName) {\n  return /^[a-zA-Z0-9_-]+$/.test(paramName);\n}\n"],"names":[],"mappings":";;;;;AAAA;AAAA;;AAEO,MAAM,oBAAoB,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,aAAa,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;IAC5B,kBAAkB,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IACrC,aAAa,oLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,oLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAC5B,MAAM,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QACxB,OAAO,oLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QACzB,SAAS,oLAAA,CAAA,IAAC,CAAC,OAAO;IACpB;AACF;AAOO,SAAS,WAAW,GAAG;IAC5B,IAAI;QACF,IAAI,IAAI;QACR,OAAO;IACT,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAOO,SAAS,iBAAiB,SAAS;IACxC,OAAO,mBAAmB,IAAI,CAAC;AACjC"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/utils/constants.js"],"sourcesContent":["export const COMMON_QUERY_PARAMS = [\n  {\n    name: 'gdpr',\n    label: 'GDPR Applies',\n    defaultValue: '${GDPR_APPLIES}',\n    isMacro: true\n  },\n  {\n    name: 'gdpr_consent',\n    label: 'GDPR Consent String',\n    defaultValue: '${GDPR_CONSENT_STRING}',\n    isMacro: true\n  },\n  {\n    name: 'us_privacy',\n    label: 'US Privacy String',\n    defaultValue: '${US_PRIVACY_STRING}',\n    isMacro: true\n  },\n  {\n    name: 'coppa',\n    label: 'COPPA',\n    defaultValue: '${COPPA}',\n    isMacro: true\n  }\n];\n\nexport const URL_ENCODING_CHARS = {\n  '!': '%21',\n  '*': '%2A',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  ';': '%3B',\n  ':': '%3A',\n  '@': '%40',\n  '&': '%26',\n  '=': '%3D',\n  '+': '%2B',\n  '$': '%24',\n  ',': '%2C',\n  '/': '%2F',\n  '?': '%3F',\n  '%': '%25',\n  '#': '%23',\n  '[': '%5B',\n  ']': '%5D'\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,sBAAsB;IACjC;QACE,MAAM;QACN,OAAO;QACP,cAAc;QACd,SAAS;IACX;IACA;QACE,MAAM;QACN,OAAO;QACP,cAAc;QACd,SAAS;IACX;IACA;QACE,MAAM;QACN,OAAO;QACP,cAAc;QACd,SAAS;IACX;IACA;QACE,MAAM;QACN,OAAO;QACP,cAAc;QACd,SAAS;IACX;CACD;AAEM,MAAM,qBAAqB;IAChC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/lib/macro-parser.js"],"sourcesContent":["/**\n * Common server-side macro patterns\n */\nexport const MACRO_PATTERNS = [\n  {\n    pattern: /\\$\\{[^}]+\\}/g, // ${MACRO_NAME}\n    type: 'dollar'\n  },\n  {\n    pattern: /%%[^%]+%%/g, // %%MACRO_NAME%%\n    type: 'percent'\n  },\n  {\n    pattern: /\\{[^}]+\\}/g, // {MACRO_NAME}\n    type: 'curly'\n  },\n  {\n    pattern: /\\$UID/g,\n    type: 'sovrnMacro'\n  }\n];\n\n/**\n * Extracts macros from a string\n * @param {string} str - String to parse\n * @returns {Array<{match: string, type: string, index: number}>} - Found macros\n */\nexport function extractMacros(str) {\n  const macros = [];\n  \n  MACRO_PATTERNS.forEach(({ pattern, type }) => {\n    const matches = [...str.matchAll(pattern)];\n    matches.forEach(match => {\n      macros.push({\n        match: match[0],\n        type,\n        index: match.index\n      });\n    });\n  });\n  \n  return macros.sort((a, b) => a.index - b.index);\n}\n\n/**\n * Replaces macros with placeholders for encoding\n * @param {string} str - Original string\n * @returns {Object} - Object with processed string and macro map\n */\nexport function protectMacros(str) {\n  const macros = extractMacros(str);\n  const macroMap = new Map();\n  let processedStr = str;\n  \n  macros.forEach((macro, index) => {\n    const placeholder = `__MACRO_${index}__`;\n    macroMap.set(placeholder, macro.match);\n    processedStr = processedStr.replace(macro.match, placeholder);\n  });\n  \n  return { processedStr, macroMap };\n}\n\n/**\n * Restores macros from placeholders\n * @param {string} str - String with placeholders\n * @param {Map} macroMap - Map of placeholders to macros\n * @returns {string} - String with restored macros\n */\nexport function restoreMacros(str, macroMap) {\n  let restoredStr = str;\n  macroMap.forEach((macro, placeholder) => {\n    restoredStr = restoredStr.replace(placeholder, macro);\n  });\n  return restoredStr;\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;AACM,MAAM,iBAAiB;IAC5B;QACE,SAAS;QACT,MAAM;IACR;IACA;QACE,SAAS;QACT,MAAM;IACR;IACA;QACE,SAAS;QACT,MAAM;IACR;IACA;QACE,SAAS;QACT,MAAM;IACR;CACD;AAOM,SAAS,cAAc,GAAG;IAC/B,MAAM,SAAS,EAAE;IAEjB,eAAe,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE;QACvC,MAAM,UAAU;eAAI,IAAI,QAAQ,CAAC;SAAS;QAC1C,QAAQ,OAAO,CAAC,CAAA;YACd,OAAO,IAAI,CAAC;gBACV,OAAO,KAAK,CAAC,EAAE;gBACf;gBACA,OAAO,MAAM,KAAK;YACpB;QACF;IACF;IAEA,OAAO,OAAO,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;AAChD;AAOO,SAAS,cAAc,GAAG;IAC/B,MAAM,SAAS,cAAc;IAC7B,MAAM,WAAW,IAAI;IACrB,IAAI,eAAe;IAEnB,OAAO,OAAO,CAAC,CAAC,OAAO;QACrB,MAAM,cAAc,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC;QACxC,SAAS,GAAG,CAAC,aAAa,MAAM,KAAK;QACrC,eAAe,aAAa,OAAO,CAAC,MAAM,KAAK,EAAE;IACnD;IAEA,OAAO;QAAE;QAAc;IAAS;AAClC;AAQO,SAAS,cAAc,GAAG,EAAE,QAAQ;IACzC,IAAI,cAAc;IAClB,SAAS,OAAO,CAAC,CAAC,OAAO;QACvB,cAAc,YAAY,OAAO,CAAC,aAAa;IACjD;IACA,OAAO;AACT"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/lib/url-encoder.js"],"sourcesContent":["import { protectMacros, restoreMacros, MACRO_PATTERNS } from './macro-parser.js';\nimport { URL_ENCODING_CHARS } from '../utils/constants.js';\n\n/**\n * @typedef {Object} MacroPattern\n * @property {RegExp} pattern - Regular expression to match the macro\n * @property {'curly'|'percent'|'dollar'} type - Type of macro pattern\n */\n\n/**\n * @typedef {Object} EncodingOptions\n * @property {boolean} preserveMacros - Whether to preserve server-side macros\n * @property {MacroPattern[]} macroPatterns - Array of macro patterns to preserve\n * @property {boolean} encodeSpaces - Whether to encode spaces\n */\n\n/**\n * Encodes URL while preserving server-side macros\n * @param {string} url - The URL to encode\n * @param {EncodingOptions} options - Encoding options\n * @returns {string} - Encoded URL with preserved macros\n */\nexport function encodeUrlWithMacros(url, options = {}) {\n  const {\n    preserveMacros = true,\n    macroPatterns = MACRO_PATTERNS,\n    encodeSpaces = true\n  } = options;\n\n  if (!url) return '';\n\n  // If we're not preserving macros, just encode normally\n  if (!preserveMacros) {\n    return encodeStringWithChars(url, encodeSpaces);\n  }\n\n  // Protect macros before encoding\n  const { processedStr, macroMap } = protectMacros(url);\n  \n  // Encode the processed string\n  const encodedStr = encodeStringWithChars(processedStr, encodeSpaces);\n  \n  // Restore macros\n  return restoreMacros(encodedStr, macroMap);\n}\n\n/**\n * Encodes a string using custom character mapping\n * @param {string} str - String to encode\n * @param {boolean} encodeSpaces - Whether to encode spaces\n * @returns {string} - Encoded string\n */\nfunction encodeStringWithChars(str, encodeSpaces = false) {\n  let encoded = '';\n  \n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    \n    // Skip encoding spaces if not required\n    if (char === ' ' && !encodeSpaces) {\n      encoded += char;\n      continue;\n    }\n    \n    // Only encode reserved characters from our map\n    if (URL_ENCODING_CHARS[char]) {\n      encoded += URL_ENCODING_CHARS[char];\n    } else {\n      encoded += char;\n    }\n  }\n  \n  return encoded;\n}\n\n\n\n/**\n * Builds a query string from parameters\n * @param {Array<{name: string, value: string, isMacro: boolean}>} params - Query parameters\n * @param {EncodingOptions} options - Encoding options\n * @returns {string} - Query string\n */\nexport function buildQueryString(params, options = {}) {\n  if (!params || params.length === 0) return '';\n  \n  const queryPairs = params\n    .filter(param => param.name && param.value !== undefined)\n    .map(param => {\n      const encodedName = encodeUrlWithMacros(param.name, { \n        ...options, \n        preserveMacros: false \n      });\n      \n      const encodedValue = param.isMacro \n        ? param.value // Don't encode macros at all\n        : encodeUrlWithMacros(param.value, { ...options, preserveMacros: false });\n      \n      return `${encodedName}=${encodedValue}`;\n    });\n  \n  return queryPairs.join('&');\n}\n\n/**\n * Builds a complete URL with query parameters\n * @param {string} baseUrl - Base URL\n * @param {Array<{name: string, value: string, isMacro: boolean}>} params - Query parameters\n * @param {EncodingOptions} options - Encoding options\n * @returns {string} - Complete URL with query string\n */\nexport function buildCompleteUrl(baseUrl, params, options = {}) {\n  if (!baseUrl) return '';\n  \n  const queryString = buildQueryString(params, options);\n  \n  if (!queryString) return baseUrl;\n  \n  const separator = baseUrl.includes('?') ? '&' : '?';\n  return `${baseUrl}${separator}${queryString}`;\n}\n\n/**\n * Validates and normalizes a URL\n * @param {string} url - URL to validate\n * @returns {{isValid: boolean, normalizedUrl: string, error?: string}} - Validation result\n */\nexport function validateAndNormalizeUrl(url) {\n  if (!url) {\n    return {\n      isValid: false,\n      normalizedUrl: '',\n      error: 'URL is required'\n    };\n  }\n  \n  try {\n    const urlObj = new URL(url);\n    \n    // Check for valid protocols\n    if (!['http:', 'https:'].includes(urlObj.protocol)) {\n      return {\n        isValid: false,\n        normalizedUrl: url,\n        error: 'URL must use HTTP or HTTPS protocol'\n      };\n    }\n    \n    return {\n      isValid: true,\n      normalizedUrl: urlObj.toString()\n    };\n  } catch (error) {\n    return {\n      isValid: false,\n      normalizedUrl: url,\n      error: 'Invalid URL format'\n    };\n  }\n}\n\n/**\n * Encodes an entire URL while preserving server-side macros\n * @param {string} url - The complete URL to encode\n * @param {EncodingOptions} options - Encoding options\n * @returns {string} - Fully encoded URL with preserved macros\n */\nexport function encodeCompleteUrl(url, options = {}) {\n  if (!url) return '';\n  \n  const {\n    preserveMacros = true,\n    macroPatterns = MACRO_PATTERNS\n  } = options;\n\n  try {\n    // If we're not preserving macros, encode the entire URL\n    if (!preserveMacros) {\n      return encodeURIComponent(url);\n    }\n\n    // Protect macros before encoding\n    const { processedStr, macroMap } = protectMacros(url);\n    \n    // Encode the entire processed string\n    const encodedStr = encodeURIComponent(processedStr);\n    \n    // Restore macros\n    return restoreMacros(encodedStr, macroMap);\n  } catch (error) {\n    // If URL parsing fails, fall back to basic encoding\n    return encodeURIComponent(url);\n  }\n}\n\n/**\n * Decodes a URL while preserving macros\n * @param {string} encodedUrl - Encoded URL\n * @returns {string} - Decoded URL\n */\nexport function decodeUrlWithMacros(encodedUrl) {\n  if (!encodedUrl) return '';\n  \n  try {\n    // First protect macros\n    const { processedStr, macroMap } = protectMacros(encodedUrl);\n    \n    // Decode the processed string\n    const decoded = decodeURIComponent(processedStr);\n    \n    // Restore macros\n    return restoreMacros(decoded, macroMap);\n  } catch (error) {\n    // If decoding fails, return original string\n    return encodedUrl;\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/lib/form-helpers.js"],"sourcesContent":["import { COMMON_QUERY_PARAMS } from '../utils/constants.js';\nimport { buildCompleteUrl, validateAndNormalizeUrl, encodeCompleteUrl } from './url-encoder.js';\n\n/**\n * Creates a new empty query parameter object\n * @returns {{name: string, value: string, isMacro: boolean}} - Empty query parameter\n */\nexport function createEmptyQueryParam() {\n  return {\n    name: '',\n    value: '',\n    isMacro: false\n  };\n}\n\n/**\n * Creates a query parameter from a preset\n * @param {Object} preset - Preset parameter configuration\n * @returns {{name: string, value: string, isMacro: boolean}} - Query parameter\n */\nexport function createQueryParamFromPreset(preset) {\n  return {\n    name: preset.name,\n    value: preset.defaultValue,\n    isMacro: preset.isMacro\n  };\n}\n\n/**\n * Validates query parameter name\n * @param {string} name - Parameter name to validate\n * @returns {{isValid: boolean, error?: string}} - Validation result\n */\nexport function validateQueryParamName(name) {\n  if (!name || name.trim() === '') {\n    return {\n      isValid: false,\n      error: 'Parameter name is required'\n    };\n  }\n  \n  // Check for valid parameter name characters\n  if (!/^[a-zA-Z0-9_-]+$/.test(name)) {\n    return {\n      isValid: false,\n      error: 'Parameter name can only contain letters, numbers, underscores, and hyphens'\n    };\n  }\n  \n  return { isValid: true };\n}\n\n/**\n * Validates query parameter value\n * @param {string} value - Parameter value to validate\n * @param {boolean} isMacro - Whether the value is a macro\n * @returns {{isValid: boolean, error?: string}} - Validation result\n */\nexport function validateQueryParamValue(value, isMacro = false) {\n  if (!value || value.trim() === '') {\n    return {\n      isValid: false,\n      error: 'Parameter value is required'\n    };\n  }\n  \n  // If it's a macro, validate macro format\n  if (isMacro) {\n    const macroPattern = /^(\\$\\{[^}]+\\}|%%[^%]+%%|\\{[^}]+\\})$/;\n    if (!macroPattern.test(value)) {\n      return {\n        isValid: false,\n        error: 'Invalid macro format. Use ${MACRO}, %%MACRO%%, or {MACRO}'\n      };\n    }\n  }\n  \n  return { isValid: true };\n}\n\n/**\n * Removes duplicate query parameters by name\n * @param {Array<{name: string, value: string, isMacro: boolean}>} params - Query parameters\n * @returns {Array<{name: string, value: string, isMacro: boolean}>} - Deduplicated parameters\n */\nexport function deduplicateQueryParams(params) {\n  const seen = new Set();\n  return params.filter(param => {\n    if (seen.has(param.name)) {\n      return false;\n    }\n    seen.add(param.name);\n    return true;\n  });\n}\n\n/**\n * Validates the entire form data\n * @param {{redirectUrl: string, queryParams: Array, cookieParamIndex: number|null}} formData - Form data to validate\n * @returns {{isValid: boolean, errors: Object}} - Validation result with detailed errors\n */\nexport function validateFormData(formData) {\n  const errors = {};\n  let isValid = true;\n  \n  // Validate redirect URL\n  const urlValidation = validateAndNormalizeUrl(formData.redirectUrl);\n  if (!urlValidation.isValid) {\n    errors.redirectUrl = urlValidation.error;\n    isValid = false;\n  }\n  \n  // Validate cookie parameter selection\n  if (formData.cookieParamIndex === null || formData.cookieParamIndex === undefined) {\n    errors.cookieParamIndex = 'Please select a parameter to use for the cookie value';\n    isValid = false;\n  } else if (formData.cookieParamIndex < 0 || formData.cookieParamIndex >= formData.queryParams.length) {\n    errors.cookieParamIndex = 'Invalid cookie parameter selection';\n    isValid = false;\n  }\n  \n  // Validate query parameters\n  const queryParamErrors = [];\n  formData.queryParams?.forEach((param, index) => {\n    const paramErrors = {};\n    \n    const nameValidation = validateQueryParamName(param.name);\n    if (!nameValidation.isValid) {\n      paramErrors.name = nameValidation.error;\n    }\n    \n    const valueValidation = validateQueryParamValue(param.value, param.isMacro);\n    if (!valueValidation.isValid) {\n      paramErrors.value = valueValidation.error;\n    }\n    \n    if (Object.keys(paramErrors).length > 0) {\n      queryParamErrors[index] = paramErrors;\n      isValid = false;\n    }\n  });\n  \n  if (queryParamErrors.length > 0) {\n    errors.queryParams = queryParamErrors;\n  }\n  \n  return { isValid, errors };\n}\n\n/**\n * Builds the final URL from form data\n * @param {{redirectUrl: string, queryParams: Array, cookieParamIndex: number|null}} formData - Form data\n * @returns {{url: string, isValid: boolean, error?: string}} - Built URL result\n */\nexport function buildFinalUrl(formData) {\n  // Validate form data first\n  const validation = validateFormData(formData);\n  if (!validation.isValid) {\n    return {\n      url: '',\n      isValid: false,\n      error: 'Please fix form validation errors'\n    };\n  }\n  \n  try {\n    // Prepare all query parameters\n    const allParams = [];\n    \n    // Add all query parameters (the cookie parameter is already included in the list)\n    if (formData.queryParams) {\n      allParams.push(...formData.queryParams);\n    }\n    \n    // Remove duplicates and filter out empty ones\n    const filteredParams = deduplicateQueryParams(\n      allParams.filter(param => param.name && param.name.trim() !== '')\n    );\n    \n    // Build the complete URL\n    const finalUrl = buildCompleteUrl(formData.redirectUrl, filteredParams);\n    console.log(\"Final URL \", finalUrl);\n    return {\n      url: finalUrl,\n      isValid: true\n    };\n  } catch (error) {\n    return {\n      url: '',\n      isValid: false,\n      error: error.message\n    };\n  }\n}\n\n/**\n * Gets available query parameter presets\n * @returns {Array<{name: string, label: string, defaultValue: string, isMacro: boolean}>} - Available presets\n */\nexport function getQueryParamPresets() {\n  return COMMON_QUERY_PARAMS;\n}\n\n/**\n * Parses a URL to extract query parameters\n * @param {string} url - URL to parse\n * @returns {Array<{name: string, value: string, isMacro: boolean}>} - Extracted query parameters\n */\nexport function parseUrlQueryParams(url) {\n  try {\n    const urlObj = new URL(url);\n    const params = [];\n    \n    for (const [name, value] of urlObj.searchParams.entries()) {\n      // Check if value looks like a macro\n      const macroPattern = /^(\\$\\{[^}]+\\}|%%[^%]+%%|\\{[^}]+\\})$/;\n      const isMacro = macroPattern.test(value);\n      \n      params.push({\n        name,\n        value,\n        isMacro\n      });\n    }\n    \n    return params;\n  } catch (error) {\n    return [];\n  }\n}\n\n/**\n * Encodes a complete URL with query parameters\n * @param {string} completeUrl - Complete URL to encode\n * @param {boolean} preserveMacros - Whether to preserve server-side macros\n * @returns {{url: string, isValid: boolean, error?: string}} - Encoded URL result\n */\nexport function encodeCompleteUrlWithParams(completeUrl, preserveMacros = true) {\n  if (!completeUrl || completeUrl.trim() === '') {\n    return {\n      url: '',\n      isValid: false,\n      error: 'URL is required'\n    };\n  }\n  \n  try {\n    // Validate the URL format\n    const urlValidation = validateAndNormalizeUrl(completeUrl);\n    if (!urlValidation.isValid) {\n      return {\n        url: '',\n        isValid: false,\n        error: urlValidation.error\n      };\n    }\n    \n    // Encode the complete URL\n    const encodedUrl = encodeCompleteUrl(completeUrl, { preserveMacros });\n    \n    return {\n      url: encodedUrl,\n      isValid: true\n    };\n  } catch (error) {\n    return {\n      url: '',\n      isValid: false,\n      error: error.message\n    };\n  }\n}\n\n/**\n * Formats a URL for display (truncates if too long)\n * @param {string} url - URL to format\n * @param {number} maxLength - Maximum length before truncation\n * @returns {string} - Formatted URL\n */\nexport function formatUrlForDisplay(url, maxLength = 80) {\n  if (!url) return '';\n  \n  if (url.length <= maxLength) {\n    return url;\n  }\n  \n  const start = url.substring(0, maxLength / 2);\n  const end = url.substring(url.length - maxLength / 2);\n  \n  return `${start}...${end}`;\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/app/components/UrlInput.js"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Globe, AlertCircle, CheckCircle } from 'lucide-react';\nimport { validateAndNormalizeUrl } from '../../lib/url-encoder.js';\n\nexport default function UrlInput({ register, error, placeholder = \"https://example.com/sync\" }) {\n  const [validationState, setValidationState] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n    \n    // Real-time validation\n    if (value.trim()) {\n      const validation = validateAndNormalizeUrl(value);\n      setValidationState(validation);\n    } else {\n      setValidationState(null);\n    }\n  };\n\n  const getInputClasses = () => {\n    let baseClasses = \"w-full px-4 py-3 pl-12 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\";\n    \n    if (error) {\n      return `${baseClasses} border-red-300 bg-red-50`;\n    }\n    \n    if (validationState?.isValid) {\n      return `${baseClasses} border-green-300 bg-green-50`;\n    }\n    \n    if (validationState && !validationState.isValid) {\n      return `${baseClasses} border-red-300 bg-red-50`;\n    }\n    \n    return `${baseClasses} border-gray-300`;\n  };\n\n  const getIconColor = () => {\n    if (error || (validationState && !validationState.isValid)) {\n      return \"text-red-400\";\n    }\n    \n    if (validationState?.isValid) {\n      return \"text-green-400\";\n    }\n    \n    return \"text-gray-400\";\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <label htmlFor=\"redirectUrl\" className=\"block text-sm font-medium text-gray-700\">\n        Redirect URL *\n      </label>\n      \n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <Globe className={`h-5 w-5 ${getIconColor()}`} />\n        </div>\n        \n        <input\n          id=\"redirectUrl\"\n          type=\"url\"\n          placeholder={placeholder}\n          className={getInputClasses()}\n          {...register('redirectUrl', {\n            onChange: handleInputChange\n          })}\n        />\n        \n        {/* Validation indicator */}\n        {(validationState || error) && (\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n            {error || (validationState && !validationState.isValid) ? (\n              <AlertCircle className=\"h-5 w-5 text-red-400\" />\n            ) : (\n              <CheckCircle className=\"h-5 w-5 text-green-400\" />\n            )}\n          </div>\n        )}\n      </div>\n      \n      {/* Error message */}\n      {error && (\n        <p className=\"text-sm text-red-600 flex items-center space-x-1\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <span>{error.message}</span>\n        </p>\n      )}\n      \n      {/* Validation message */}\n      {validationState && !validationState.isValid && !error && (\n        <p className=\"text-sm text-red-600 flex items-center space-x-1\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <span>{validationState.error}</span>\n        </p>\n      )}\n      \n      {/* Success message */}\n      {validationState?.isValid && !error && (\n        <p className=\"text-sm text-green-600 flex items-center space-x-1\">\n          <CheckCircle className=\"h-4 w-4\" />\n          <span>Valid URL format</span>\n        </p>\n      )}\n      \n      {/* Help text */}\n      <p className=\"text-sm text-gray-500\">\n        Enter the base URL where users will be redirected for cookie synchronization.\n        Must use HTTP or HTTPS protocol.\n      </p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AADA;AAAA;AAAA;;;AAHA;;;;AAMe,SAAS,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,0BAA0B,EAAE;;IAC5F,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,oBAAoB,CAAC;QACzB,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,cAAc;QAEd,uBAAuB;QACvB,IAAI,MAAM,IAAI,IAAI;YAChB,MAAM,aAAa,CAAA,GAAA,+HAAA,CAAA,0BAAuB,AAAD,EAAE;YAC3C,mBAAmB;QACrB,OAAO;YACL,mBAAmB;QACrB;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,cAAc;QAElB,IAAI,OAAO;YACT,OAAO,GAAG,YAAY,yBAAyB,CAAC;QAClD;QAEA,IAAI,iBAAiB,SAAS;YAC5B,OAAO,GAAG,YAAY,6BAA6B,CAAC;QACtD;QAEA,IAAI,mBAAmB,CAAC,gBAAgB,OAAO,EAAE;YAC/C,OAAO,GAAG,YAAY,yBAAyB,CAAC;QAClD;QAEA,OAAO,GAAG,YAAY,gBAAgB,CAAC;IACzC;IAEA,MAAM,eAAe;QACnB,IAAI,SAAU,mBAAmB,CAAC,gBAAgB,OAAO,EAAG;YAC1D,OAAO;QACT;QAEA,IAAI,iBAAiB,SAAS;YAC5B,OAAO;QACT;QAEA,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,SAAQ;gBAAc,WAAU;0BAA0C;;;;;;0BAIjF,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,uMAAA,CAAA,QAAK;4BAAC,WAAW,CAAC,QAAQ,EAAE,gBAAgB;;;;;;;;;;;kCAG/C,6LAAC;wBACC,IAAG;wBACH,MAAK;wBACL,aAAa;wBACb,WAAW;wBACV,GAAG,SAAS,eAAe;4BAC1B,UAAU;wBACZ,EAAE;;;;;;oBAIH,CAAC,mBAAmB,KAAK,mBACxB,6LAAC;wBAAI,WAAU;kCACZ,SAAU,mBAAmB,CAAC,gBAAgB,OAAO,iBACpD,6LAAC,uNAAA,CAAA,cAAW;4BAAC,WAAU;;;;;iDAEvB,6LAAC,uNAAA,CAAA,cAAW;4BAAC,WAAU;;;;;;;;;;;;;;;;;YAO9B,uBACC,6LAAC;gBAAE,WAAU;;kCACX,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACvB,6LAAC;kCAAM,MAAM,OAAO;;;;;;;;;;;;YAKvB,mBAAmB,CAAC,gBAAgB,OAAO,IAAI,CAAC,uBAC/C,6LAAC;gBAAE,WAAU;;kCACX,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACvB,6LAAC;kCAAM,gBAAgB,KAAK;;;;;;;;;;;;YAK/B,iBAAiB,WAAW,CAAC,uBAC5B,6LAAC;gBAAE,WAAU;;kCACX,6LAAC,uNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACvB,6LAAC;kCAAK;;;;;;;;;;;;0BAKV,6LAAC;gBAAE,WAAU;0BAAwB;;;;;;;;;;;;AAM3C;GA/GwB;KAAA"}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/app/components/UrlParser.js"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { \n  Link, \n  AlertCircle, \n  CheckCircle, \n  ArrowRight,\n  Info,\n  Zap\n} from 'lucide-react';\nimport { parseUrlQueryParams } from '../../lib/form-helpers.js';\nimport { validateAndNormalizeUrl } from '../../lib/url-encoder.js';\n\nexport default function UrlParser({ onParseUrl, onParseParams }) {\n  const [inputUrl, setInputUrl] = useState('');\n  const [parsedData, setParsedData] = useState(null);\n  const [isParsing, setIsParsing] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleUrlChange = (e) => {\n    const url = e.target.value;\n    setInputUrl(url);\n    setParsedData(null);\n    setError('');\n  };\n\n  const handleParse = () => {\n    if (!inputUrl.trim()) {\n      setError('Please enter a URL to parse');\n      return;\n    }\n\n    setIsParsing(true);\n    setError('');\n\n    try {\n      // Validate and normalize the URL\n      const urlValidation = validateAndNormalizeUrl(inputUrl);\n      if (!urlValidation.isValid) {\n        setError(urlValidation.error);\n        setIsParsing(false);\n        return;\n      }\n\n      // Parse query parameters\n      const params = parseUrlQueryParams(urlValidation.normalizedUrl);\n      \n      // Extract base URL (without query parameters)\n      const urlObj = new URL(urlValidation.normalizedUrl);\n      const baseUrl = `${urlObj.protocol}//${urlObj.host}${urlObj.pathname}`;\n\n      const result = {\n        baseUrl,\n        params,\n        originalUrl: urlValidation.normalizedUrl\n      };\n\n      setParsedData(result);\n    } catch (error) {\n      setError('Failed to parse URL. Please check the format.');\n    } finally {\n      setIsParsing(false);\n    }\n  };\n\n  const handleApplyBaseUrl = () => {\n    if (parsedData?.baseUrl) {\n      onParseUrl(parsedData.baseUrl);\n    }\n  };\n\n  const handleApplyParams = () => {\n    if (parsedData?.params) {\n      onParseParams(parsedData.params);\n    }\n  };\n\n  const handleApplyAll = () => {\n    console.log('Parsed Data', parsedData);\n    if (parsedData) {\n      onParseUrl(parsedData.baseUrl);\n      onParseParams(parsedData.params);\n    }\n  };\n\n  const getInputClasses = () => {\n    let baseClasses = \"w-full px-4 py-3 pl-12 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\";\n    \n    if (error) {\n      return `${baseClasses} border-red-300 bg-red-50`;\n    }\n    \n    if (parsedData) {\n      return `${baseClasses} border-green-300 bg-green-50`;\n    }\n    \n    return `${baseClasses} border-gray-300`;\n  };\n\n  const getIconColor = () => {\n    if (error) {\n      return \"text-red-400\";\n    }\n    \n    if (parsedData) {\n      return \"text-green-400\";\n    }\n    \n    return \"text-gray-400\";\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-start space-x-3\">\n        <Link className=\"h-5 w-5 text-blue-500 mt-1\" />\n        <div className=\"flex-1\">\n          <h3 className=\"text-sm font-medium text-gray-900\">Parse Existing URL</h3>\n          <p className=\"text-sm text-gray-600\">\n            Paste a complete URL to extract the base URL and query parameters automatically.\n          </p>\n        </div>\n      </div>\n\n      <div className=\"space-y-3\">\n        {/* URL Input */}\n        <div className=\"relative\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <Link className={`h-5 w-5 ${getIconColor()}`} />\n          </div>\n          \n          <input\n            type=\"url\"\n            placeholder=\"https://example.com/sync?param1=value1&param2=${MACRO}\"\n            value={inputUrl}\n            onChange={handleUrlChange}\n            className={getInputClasses()}\n          />\n          \n          {/* Parse Button */}\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n            <button\n              type=\"button\"\n              onClick={handleParse}\n              disabled={isParsing || !inputUrl.trim()}\n              className=\"inline-flex items-center px-3 py-1.5 border border-transparent rounded-md text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isParsing ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Parsing...\n                </>\n              ) : (\n                <>\n                  <Zap className=\"h-4 w-4 mr-2\" />\n                  Parse\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <p className=\"text-sm text-red-600 flex items-center space-x-1\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <span>{error}</span>\n          </p>\n        )}\n\n        {/* Parsed Results */}\n        {parsedData && (\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-5 w-5 text-green-500\" />\n              <h4 className=\"text-sm font-medium text-green-900\">URL Parsed Successfully</h4>\n            </div>\n\n            {/* Base URL */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <label className=\"text-sm font-medium text-green-800\">Base URL:</label>\n                <button\n                  type=\"button\"\n                  onClick={handleApplyBaseUrl}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                >\n                  Apply to Step 1\n                </button>\n              </div>\n              <div className=\"bg-white border border-green-200 rounded px-3 py-2 text-sm font-mono text-green-900 break-all\">\n                {parsedData.baseUrl}\n              </div>\n            </div>\n\n            {/* Query Parameters */}\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <label className=\"text-sm font-medium text-green-800\">\n                  Query Parameters ({parsedData.params.length}):\n                </label>\n                <button\n                  type=\"button\"\n                  onClick={handleApplyParams}\n                  className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                >\n                  Apply to Step 2\n                </button>\n              </div>\n              \n              {parsedData.params.length > 0 ? (\n                <div className=\"bg-white border border-green-200 rounded p-3 space-y-2\">\n                  {parsedData.params.map((param, index) => (\n                    <div key={index} className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"font-medium text-green-900\">{param.name}</span>\n                        <ArrowRight className=\"h-3 w-3 text-green-600\" />\n                        <span className={`font-mono ${param.isMacro ? 'text-blue-600' : 'text-green-900'}`}>\n                          {param.value}\n                        </span>\n                        {param.isMacro && (\n                          <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\n                            Macro\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"bg-white border border-green-200 rounded px-3 py-2 text-sm text-gray-500\">\n                  No query parameters found\n                </div>\n              )}\n            </div>\n\n            {/* Apply All Button */}\n            <div className=\"pt-2 border-t border-green-200\">\n              <button\n                type=\"button\"\n                onClick={handleApplyAll}\n                className=\"w-full inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500\"\n              >\n                <CheckCircle className=\"h-4 w-4 mr-2\" />\n                Apply All to Form\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Info Banner */}\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-3\">\n            <Info className=\"h-5 w-5 text-blue-500 mt-0.5\" />\n            <div>\n              <h4 className=\"text-sm font-medium text-blue-900\">URL Parsing Features</h4>\n              <div className=\"mt-2 text-sm text-blue-800\">\n                <ul className=\"space-y-1\">\n                  <li>• Automatically detects and validates URL format</li>\n                  <li>• Extracts base URL and separates query parameters</li>\n                  <li>• Identifies server-side macros (${\"{MACRO}\"}, %%MACRO%%, {\"{MACRO}\"})</li>\n                  <li>• Preserves parameter order and values exactly as provided</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1333, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/app/components/QueryParamBuilder.js"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { \n  Plus, \n  Minus, \n  Settings, \n  Code, \n  AlertCircle, \n  ChevronDown,\n  Zap,\n  Cookie\n} from 'lucide-react';\nimport { validateQueryParamName, validateQueryParamValue } from '../../lib/form-helpers.js';\n\nexport default function QueryParamBuilder({ \n  queryParams, \n  onAdd, \n  onRemove, \n  onUpdate, \n  onAddPreset, \n  presets = [],\n  cookieParamIndex,\n  onCookieParamChange\n}) {\n  const [showPresets, setShowPresets] = useState(false);\n\n  const handleParamChange = (index, field, value) => {\n    const updates = { [field]: value };\n    \n    // Auto-detect if value is a macro\n    if (field === 'value') {\n      const macroPattern = /^(\\$\\{[^}]+\\}|%%[^%]+%%|\\{[^}]+\\})$/;\n      updates.isMacro = macroPattern.test(value);\n    }\n    \n    onUpdate(index, updates);\n  };\n\n  const validateParam = (param) => {\n    const nameValidation = validateQueryParamName(param.name);\n    const valueValidation = validateQueryParamValue(param.value, param.isMacro);\n    \n    return {\n      name: nameValidation,\n      value: valueValidation\n    };\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header with Add and Presets buttons */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Settings className=\"h-5 w-5 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">\n            Query Parameters ({queryParams.length})\n          </span>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* Presets Dropdown */}\n          <div className=\"relative\">\n            <button\n              type=\"button\"\n              onClick={() => setShowPresets(!showPresets)}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <Zap className=\"h-4 w-4 mr-2\" />\n              Presets\n              <ChevronDown className=\"h-4 w-4 ml-2\" />\n            </button>\n            \n            {showPresets && (\n              <div className=\"absolute right-0 mt-2 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-10\">\n                <div className=\"p-3 border-b border-gray-200\">\n                  <h4 className=\"text-sm font-medium text-gray-900\">Common Parameters</h4>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Add commonly used query parameters\n                  </p>\n                </div>\n                <div className=\"max-h-48 overflow-y-auto\">\n                  {presets.map((preset, index) => (\n                    <button\n                      key={index}\n                      type=\"button\"\n                      onClick={() => {\n                        onAddPreset(preset);\n                        setShowPresets(false);\n                      }}\n                      className=\"w-full px-3 py-2 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50\"\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {preset.name}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">\n                            {preset.label}\n                          </div>\n                        </div>\n                        {preset.isMacro && (\n                          <Code className=\"h-4 w-4 text-blue-500\" />\n                        )}\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {/* Add Parameter Button */}\n          <button\n            type=\"button\"\n            onClick={onAdd}\n            className=\"inline-flex items-center px-3 py-2 border border-transparent rounded-lg text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add Parameter\n          </button>\n        </div>\n      </div>\n\n      {/* Cookie Parameter Selection */}\n      {queryParams.length > 0 && (\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2 mb-3\">\n            <Cookie className=\"h-4 w-4 text-blue-500\" />\n            <h4 className=\"text-sm font-medium text-blue-900\">Cookie Parameter Selection</h4>\n          </div>\n          <p className=\"text-sm text-blue-800 mb-3\">\n            Select which query parameter should be used to pass the Sovrn third-party cookie value:\n          </p>\n          <div className=\"space-y-2\">\n            {queryParams.map((param, index) => (\n              <label key={index} className=\"flex items-center space-x-3 cursor-pointer\">\n                <input\n                  type=\"radio\"\n                  name=\"cookieParam\"\n                  value={index}\n                  checked={cookieParamIndex === index}\n                  onChange={(e) => onCookieParamChange(parseInt(e.target.value))}\n                  className=\"text-blue-600 focus:ring-blue-500\"\n                />\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm font-medium text-blue-900\">{param.name}</span>\n                  {param.name && (\n                    <>\n                      <span className=\"text-blue-600\">→</span>\n                      <span className=\"text-sm text-blue-800 font-mono\">{cookieParamIndex ? 'UID' : param.value}</span>\n                    </>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n          {cookieParamIndex === null && (\n            <p className=\"text-sm text-blue-600 mt-2\">\n              Please select a parameter to use for the cookie value.\n            </p>\n          )}\n        </div>\n      )}\n\n      {/* Parameter List */}\n      <div className=\"space-y-3\">\n        {queryParams.map((param, index) => {\n          const validation = validateParam(param);\n          const isCookieParam = cookieParamIndex === index;\n          \n          return (\n            <div key={index} className={`border rounded-lg p-4 ${\n              isCookieParam \n                ? 'border-blue-300 bg-blue-50' \n                : 'border-gray-200 bg-gray-50'\n            }`}>\n              {isCookieParam && (\n                <div className=\"flex items-center space-x-2 mb-3 p-2 bg-blue-100 border border-blue-200 rounded text-xs\">\n                  <Cookie className=\"h-3 w-3 text-blue-500\" />\n                  <span className=\"font-medium text-blue-900\">Selected as Cookie Parameter</span>\n                </div>\n              )}\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n                {/* Parameter Name */}\n                <div className=\"space-y-1\">\n                  <label className=\"block text-xs font-medium text-gray-700\">\n                    Parameter Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    placeholder=\"param_name\"\n                    value={param.name}\n                    onChange={(e) => handleParamChange(index, 'name', e.target.value)}\n                    className={`w-full px-3 py-2 text-sm border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n                      !validation.name.isValid && param.name\n                        ? 'border-red-300 bg-red-50'\n                        : 'border-gray-300 bg-white'\n                    }`}\n                  />\n                  {!validation.name.isValid && param.name && (\n                    <p className=\"text-xs text-red-600 flex items-center space-x-1\">\n                      <AlertCircle className=\"h-3 w-3\" />\n                      <span>{validation.name.error}</span>\n                    </p>\n                  )}\n                </div>\n\n                {/* Parameter Value */}\n                <div className=\"space-y-1\">\n                  <label className=\"block text-xs font-medium text-gray-700\">\n                    Value / Macro\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"${MACRO} or static value\"\n                      value={isCookieParam ? \"$UID\" : param.value}\n                      onChange={(e) => handleParamChange(index, 'value', e.target.value)}\n                      className={`w-full px-3 py-2 pr-8 text-sm border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n                        !validation.value.isValid && param.value\n                          ? 'border-red-300 bg-red-50'\n                          : param.isMacro\n                          ? 'border-blue-300 bg-blue-50'\n                          : 'border-gray-300 bg-white'\n                      }`}\n                    />\n                    {param.isMacro && (\n                      <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                        <Code className=\"h-4 w-4 text-blue-500\" />\n                      </div>\n                    )}\n                  </div>\n                  {!validation.value.isValid && param.value && (\n                    <p className=\"text-xs text-red-600 flex items-center space-x-1\">\n                      <AlertCircle className=\"h-3 w-3\" />\n                      <span>{validation.value.error}</span>\n                    </p>\n                  )}\n                </div>\n\n                {/* Controls */}\n                <div className=\"flex items-end space-x-2\">\n                  {/* Macro Toggle */}\n                  <label className=\"flex items-center space-x-2 text-xs\">\n                    <input\n                      type=\"checkbox\"\n                      checked={param.isMacro}\n                      onChange={(e) => handleParamChange(index, 'isMacro', e.target.checked)}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-gray-600\">Macro</span>\n                  </label>\n                  \n                  {/* Remove Button */}\n                  <button\n                    type=\"button\"\n                    onClick={() => onRemove(index)}\n                    className=\"p-2 text-red-600 hover:bg-red-50 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\n                    title=\"Remove parameter\"\n                  >\n                    <Minus className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n\n              {/* Macro Info */}\n              {param.isMacro && (\n                <div className=\"mt-3 p-2 bg-blue-50 border border-blue-200 rounded text-xs\">\n                  <div className=\"flex items-center space-x-1\">\n                    <Code className=\"h-3 w-3 text-blue-500\" />\n                    <span className=\"font-medium text-blue-900\">Server-side macro detected</span>\n                  </div>\n                  <p className=\"text-blue-800 mt-1\">\n                    This value will be preserved during encoding and replaced by your ad server.\n                  </p>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Empty State */}\n      {queryParams.length === 0 && (\n        <div className=\"text-center py-8 bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg\">\n          <Settings className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\n          <p className=\"text-sm text-gray-600 mb-2\">No additional query parameters</p>\n          <button\n            type=\"button\"\n            onClick={onAdd}\n            className=\"inline-flex items-center px-3 py-2 border border-transparent rounded-lg text-sm font-medium text-blue-600 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add Your First Parameter\n          </button>\n        </div>\n      )}\n\n      {/* Help Text */}\n      <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-3\">\n        <h4 className=\"text-sm font-medium text-amber-900 mb-1\">Parameter Guidelines</h4>\n        <ul className=\"text-xs text-amber-800 space-y-1\">\n          <li>• Parameter names can only contain letters, numbers, underscores, and hyphens</li>\n          <li>• Use server-side macros like ${\"{GDPR_APPLIES}\"}, %%MACRO%%, or {\"{MACRO}\"}</li>\n          <li>• Static values will be URL-encoded automatically</li>\n          <li>• Macros are preserved during encoding for server-side replacement</li>\n          <li>• Select one parameter to be used for passing your third-party cookie value</li>\n        </ul>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2080, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2086, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/app/components/CopyButton.js"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Copy, CheckCircle, AlertCircle } from 'lucide-react';\n\nexport default function CopyButton({ \n  text, \n  variant = 'default', \n  label = 'Copy',\n  className = '' \n}) {\n  const [copyState, setCopyState] = useState('idle'); // 'idle', 'success', 'error'\n\n  const handleCopy = async () => {\n    if (!text) return;\n\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopyState('success');\n      setTimeout(() => setCopyState('idle'), 2000);\n    } catch (error) {\n      setCopyState('error');\n      setTimeout(() => setCopyState('idle'), 2000);\n      \n      // Fallback for older browsers\n      try {\n        const textArea = document.createElement('textarea');\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        setCopyState('success');\n        setTimeout(() => setCopyState('idle'), 2000);\n      } catch (fallbackError) {\n        console.error('Copy failed:', fallbackError);\n      }\n    }\n  };\n\n  const getButtonClasses = () => {\n    const baseClasses = \"inline-flex items-center px-3 py-2 border rounded-lg text-sm font-medium focus:outline-none focus:ring-2 transition-colors\";\n    \n    if (variant === 'primary') {\n      return `${baseClasses} border-transparent text-white bg-blue-600 hover:bg-blue-700 focus:ring-blue-500 ${className}`;\n    }\n    \n    if (variant === 'secondary') {\n      return `${baseClasses} border-gray-300 text-gray-700 bg-white hover:bg-gray-50 focus:ring-blue-500 ${className}`;\n    }\n    \n    // Default variant\n    return `${baseClasses} border-gray-300 text-gray-700 bg-white hover:bg-gray-50 focus:ring-blue-500 ${className}`;\n  };\n\n  const getIcon = () => {\n    switch (copyState) {\n      case 'success':\n        return <CheckCircle className=\"h-4 w-4\" />;\n      case 'error':\n        return <AlertCircle className=\"h-4 w-4\" />;\n      default:\n        return <Copy className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getLabel = () => {\n    switch (copyState) {\n      case 'success':\n        return 'Copied!';\n      case 'error':\n        return 'Failed';\n      default:\n        return label;\n    }\n  };\n\n  const getTextColor = () => {\n    if (variant === 'primary') {\n      switch (copyState) {\n        case 'success':\n          return 'text-green-100';\n        case 'error':\n          return 'text-red-100';\n        default:\n          return 'text-white';\n      }\n    }\n    \n    // For secondary and default variants\n    switch (copyState) {\n      case 'success':\n        return 'text-green-600';\n      case 'error':\n        return 'text-red-600';\n      default:\n        return 'text-gray-700';\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handleCopy}\n      disabled={!text || copyState === 'success'}\n      className={`${getButtonClasses()} ${getTextColor()} ${\n        !text ? 'opacity-50 cursor-not-allowed' : ''\n      }`}\n      title={`Copy ${label.toLowerCase()} to clipboard`}\n    >\n      {getIcon()}\n      <span className=\"ml-2\">{getLabel()}</span>\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;;;AAHA;;;AAKe,SAAS,WAAW,EACjC,IAAI,EACJ,UAAU,SAAS,EACnB,QAAQ,MAAM,EACd,YAAY,EAAE,EACf;;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,6BAA6B;IAEjF,MAAM,aAAa;QACjB,IAAI,CAAC,MAAM;QAEX,IAAI;YACF,MAAM,UAAU,SAAS,CAAC,SAAS,CAAC;YACpC,aAAa;YACb,WAAW,IAAM,aAAa,SAAS;QACzC,EAAE,OAAO,OAAO;YACd,aAAa;YACb,WAAW,IAAM,aAAa,SAAS;YAEvC,8BAA8B;YAC9B,IAAI;gBACF,MAAM,WAAW,SAAS,aAAa,CAAC;gBACxC,SAAS,KAAK,GAAG;gBACjB,SAAS,IAAI,CAAC,WAAW,CAAC;gBAC1B,SAAS,MAAM;gBACf,SAAS,WAAW,CAAC;gBACrB,SAAS,IAAI,CAAC,WAAW,CAAC;gBAC1B,aAAa;gBACb,WAAW,IAAM,aAAa,SAAS;YACzC,EAAE,OAAO,eAAe;gBACtB,QAAQ,KAAK,CAAC,gBAAgB;YAChC;QACF;IACF;IAEA,MAAM,mBAAmB;QACvB,MAAM,cAAc;QAEpB,IAAI,YAAY,WAAW;YACzB,OAAO,GAAG,YAAY,iFAAiF,EAAE,WAAW;QACtH;QAEA,IAAI,YAAY,aAAa;YAC3B,OAAO,GAAG,YAAY,6EAA6E,EAAE,WAAW;QAClH;QAEA,kBAAkB;QAClB,OAAO,GAAG,YAAY,6EAA6E,EAAE,WAAW;IAClH;IAEA,MAAM,UAAU;QACd,OAAQ;YACN,KAAK;gBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC;gBACE,qBAAO,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;QAC3B;IACF;IAEA,MAAM,WAAW;QACf,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,eAAe;QACnB,IAAI,YAAY,WAAW;YACzB,OAAQ;gBACN,KAAK;oBACH,OAAO;gBACT,KAAK;oBACH,OAAO;gBACT;oBACE,OAAO;YACX;QACF;QAEA,qCAAqC;QACrC,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,6LAAC;QACC,MAAK;QACL,SAAS;QACT,UAAU,CAAC,QAAQ,cAAc;QACjC,WAAW,GAAG,mBAAmB,CAAC,EAAE,eAAe,CAAC,EAClD,CAAC,OAAO,kCAAkC,IAC1C;QACF,OAAO,CAAC,KAAK,EAAE,MAAM,WAAW,GAAG,aAAa,CAAC;;YAEhD;0BACD,6LAAC;gBAAK,WAAU;0BAAQ;;;;;;;;;;;;AAG9B;GA7GwB;KAAA"}},
    {"offset": {"line": 2226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/app/components/PreviewPanel.js"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { \n  Eye, \n  Copy, \n  CheckCircle, \n  AlertCircle, \n  Loader2,\n  ExternalLink,\n  Code\n} from 'lucide-react';\nimport { formatUrlForDisplay, encodeCompleteUrlWithParams } from '../../lib/form-helpers.js';\nimport CopyButton from './CopyButton.js';\n\nexport default function PreviewPanel({ url, error, isBuilding }) {\n  const [showRaw, setShowRaw] = useState(false);\n  \n  const hasUrl = url && url.trim() !== '';\n  const hasError = error && error.trim() !== '';\n\n  const decodedUrl = hasUrl ? decodeURIComponent(url) : '';\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Eye className=\"h-5 w-5 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">URL Preview</span>\n        </div>\n        \n        {hasUrl && (\n          <div className=\"flex items-center space-x-2\">\n            {/* Raw/Decoded Toggle */}\n            <button\n              type=\"button\"\n              onClick={() => setShowRaw(!showRaw)}\n              className={`px-3 py-1 text-xs font-medium rounded-md transition-colors ${\n                showRaw\n                  ? 'bg-gray-900 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <Code className=\"h-3 w-3 mr-1\" />\n              {showRaw ? 'Encoded' : 'Decoded'}\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Status Indicator */}\n      <div className=\"flex items-center space-x-2\">\n        {isBuilding ? (\n          <div className=\"flex items-center space-x-2 text-blue-600\">\n            <Loader2 className=\"h-4 w-4 animate-spin\" />\n            <span className=\"text-sm\">Building URL...</span>\n          </div>\n        ) : hasError ? (\n          <div className=\"flex items-center space-x-2 text-red-600\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <span className=\"text-sm\">Validation Error</span>\n          </div>\n        ) : hasUrl ? (\n          <div className=\"flex items-center space-x-2 text-green-600\">\n            <CheckCircle className=\"h-4 w-4\" />\n            <span className=\"text-sm\">URL Valid & {url.includes('%') && url.includes('://') ? 'Fully Encoded' : 'Reserved Chars Encoded'}</span>\n          </div>\n        ) : (\n          <div className=\"flex items-center space-x-2 text-gray-500\">\n            <Eye className=\"h-4 w-4\" />\n            <span className=\"text-sm\">Enter details above to generate URL</span>\n          </div>\n        )}\n      </div>\n\n      {/* URL Display */}\n      <div className=\"border border-gray-200 rounded-lg\">\n        {hasError ? (\n          /* Error State */\n          <div className=\"p-4 bg-red-50 border-red-200\">\n            <div className=\"flex items-start space-x-3\">\n              <AlertCircle className=\"h-5 w-5 text-red-500 mt-0.5\" />\n              <div>\n                <h4 className=\"text-sm font-medium text-red-900\">Validation Error</h4>\n                <p className=\"text-sm text-red-800 mt-1\">{error}</p>\n              </div>\n            </div>\n          </div>\n        ) : hasUrl ? (\n          /* URL Display */\n          <div className=\"bg-gray-50\">\n            {/* URL */}\n            <div className=\"p-4 border-b border-gray-200\">\n              <div className=\"flex items-start justify-between space-x-3\">\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"font-mono text-sm break-all text-gray-900 leading-relaxed\">\n                    {showRaw ? encodeCompleteUrlWithParams(decodedUrl).url : decodedUrl}\n                    {console.log(\"URL \", url)}\n                    {console.log(\"Decoded URL \", decodedUrl)}\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* URL Statistics */}\n            <div className=\"px-4 py-3 bg-white border-b border-gray-200\">\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n                <div>\n                  <div className=\"text-lg font-semibold text-gray-900\">\n                    {url.length}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">Characters</div>\n                </div>\n                <div>\n                  <div className=\"text-lg font-semibold text-gray-900\">\n                    {(url.match(/&/g) || []).length + 1}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">Parameters</div>\n                </div>\n                <div>\n                  <div className=\"text-lg font-semibold text-gray-900\">\n                    {(url.match(/(\\$\\{[^}]+\\}|%%[^%]+%%|\\{[^}]+\\})/g) || []).length}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">Server Macros</div>\n                </div>\n                <div>\n                  <div className=\"text-lg font-semibold text-gray-900\">\n                    {(url.match(/%[0-9A-F]{2}/g) || []).length}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">Reserved Chars</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"p-4 bg-white space-y-3\">\n              <div className=\"flex flex-wrap gap-2\">\n                <CopyButton \n                  text={url}\n                  variant=\"primary\"\n                  label=\"Copy Final URL\"\n                />\n                \n                <CopyButton \n                  text={decodedUrl}\n                  variant=\"secondary\"\n                  label=\"Copy Decoded URL\"\n                />\n                \n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    try {\n                      // Extract just the domain for testing\n                      const urlObj = new URL(url);\n                      const testUrl = `${urlObj.protocol}//${urlObj.host}${urlObj.pathname}`;\n                      window.open(testUrl, '_blank', 'noopener,noreferrer');\n                    } catch (e) {\n                      console.error('Invalid URL for testing:', e);\n                    }\n                  }}\n                  className=\"inline-flex items-center px-3 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <ExternalLink className=\"h-4 w-4 mr-2\" />\n                  Test Domain\n                </button>\n              </div>\n              \n              <p className=\"text-xs text-gray-500\">\n                Use \"Copy Final URL\" for production. Test the domain first to ensure it's accessible.\n              </p>\n            </div>\n          </div>\n        ) : (\n          /* Empty State */\n          <div className=\"p-8 text-center bg-gray-50\">\n            <Eye className=\"h-12 w-12 text-gray-300 mx-auto mb-3\" />\n            <h3 className=\"text-sm font-medium text-gray-900 mb-1\">No URL Generated</h3>\n            <p className=\"text-sm text-gray-500\">\n              Fill in the form above to see your redirect URL preview\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Help Text */}\n      {hasUrl && (\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n          <h4 className=\"text-sm font-medium text-green-900 mb-1\">Ready to Use</h4>\n          <div className=\"text-xs text-green-800 space-y-1\">\n            <p>• Complete URLs are fully encoded while preserving server-side macros</p>\n            <p>• Base URLs with separate parameters only encode reserved characters: ! * ' ( ) ; : @ & = + $ , / ? % # [ ]</p>\n            <p>• Server-side macros are completely ignored and left unencoded</p>\n            <p>• Copy the \"Final URL\" and use it in your user-sync pixel configuration</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2801, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2807, "column": 0}, "map": {"version":3,"sources":["file:///Users/ckohler/Desktop/PersonalProjects/Ckohler90.github.io/src/app/components/RedirectForm.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { redirectUrlSchema } from '../../lib/validators.js';\nimport { \n  createEmptyQueryParam, \n  getQueryParamPresets, \n  buildFinalUrl,\n  validateFormData,\n  encodeCompleteUrlWithParams\n} from '../../lib/form-helpers.js';\nimport UrlInput from './UrlInput.js';\nimport UrlParser from './UrlParser.js';\nimport QueryParamBuilder from './QueryParamBuilder.js';\nimport PreviewPanel from './PreviewPanel.js';\n\n/**\n * @typedef {Object} QueryParam\n * @property {string} name - Parameter name\n * @property {string} value - Parameter value or macro\n * @property {boolean} isMacro - Whether the value is a server-side macro\n */\n\n/**\n * @typedef {Object} FormData\n * @property {string} redirectUrl - Base redirect URL\n * @property {QueryParam[]} queryParams - Additional query parameters\n * @property {number|null} cookieParamIndex - Index of the parameter to use for cookie value\n */\n\nexport default function RedirectForm() {\n  const [queryParams, setQueryParams] = useState([createEmptyQueryParam()]);\n  const [cookieParamIndex, setCookieParamIndex] = useState(null);\n  const [builtUrl, setBuiltUrl] = useState('');\n  const [urlError, setUrlError] = useState('');\n  const [isBuilding, setIsBuilding] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n    setValue,\n    getValues\n  } = useForm({\n    resolver: zodResolver(redirectUrlSchema),\n    defaultValues: {\n      redirectUrl: '',\n      queryParams: []\n    },\n    mode: 'onChange'\n  });\n\n  // Watch form values for real-time URL building\n  const watchedValues = watch();\n\n  // Build URL in real-time as user types\n  useEffect(() => {\n    const buildUrl = async () => {\n      setIsBuilding(true);\n      \n      try {\n        const redirectUrl = watchedValues.redirectUrl || '';\n        \n        // Check if the URL contains query parameters (indicates a complete URL)\n        const hasQueryParams = redirectUrl.includes('?') && redirectUrl.includes('=');\n        \n        if (hasQueryParams) {\n          // Handle complete URL with query parameters\n          const result = encodeCompleteUrlWithParams(redirectUrl, true);\n          \n          if (result.isValid) {\n            setBuiltUrl(result.url);\n            setUrlError('');\n          } else {\n            setBuiltUrl('');\n            setUrlError(result.error || 'Invalid URL format');\n          }\n        } else {\n          // Handle base URL with separate query parameters\n          const formData = {\n            redirectUrl: redirectUrl,\n            queryParams: queryParams.filter(param => param.name.trim() !== ''),\n            cookieParamIndex: cookieParamIndex\n          };\n\n          const result = buildFinalUrl(formData);\n          \n          if (result.isValid) {\n            setBuiltUrl(result.url);\n            setUrlError('');\n          } else {\n            setBuiltUrl('');\n            setUrlError(result.error || 'Invalid form data');\n          }\n        }\n      } catch (error) {\n        setBuiltUrl('');\n        setUrlError(error.message);\n      } finally {\n        setIsBuilding(false);\n      }\n    };\n\n    // Debounce URL building\n    const timeoutId = setTimeout(buildUrl, 300);\n    return () => clearTimeout(timeoutId);\n  }, [watchedValues, queryParams, cookieParamIndex]);\n\n  const handleAddQueryParam = () => {\n    setQueryParams(prev => [...prev, createEmptyQueryParam()]);\n  };\n\n  const handleRemoveQueryParam = (index) => {\n    setQueryParams(prev => prev.filter((_, i) => i !== index));\n    \n    // Update cookie parameter index if the removed parameter was selected\n    if (cookieParamIndex === index) {\n      setCookieParamIndex(null);\n    } else if (cookieParamIndex !== null && cookieParamIndex > index) {\n      // Adjust index if we removed a parameter before the selected one\n      setCookieParamIndex(cookieParamIndex - 1);\n    }\n  };\n\n  const handleUpdateQueryParam = (index, updates) => {\n    setQueryParams(prev => \n      prev.map((param, i) => \n        i === index ? { ...param, ...updates } : param\n      )\n    );\n  };\n\n  const handleAddPreset = (preset) => {\n    const newParam = {\n      name: preset.name,\n      value: preset.defaultValue,\n      isMacro: preset.isMacro\n    };\n    setQueryParams(prev => [...prev, newParam]);\n  };\n\n  const handleCookieParamChange = (index) => {\n    setCookieParamIndex(index);\n  };\n\n  const handleParseUrl = (baseUrl) => {\n    setValue('redirectUrl', baseUrl);\n  };\n\n  const handleParseParams = (params) => {\n    // Clear existing parameters and add the parsed ones\n    setQueryParams(params.map(param => ({\n      name: param.name,\n      value: param.value,\n      isMacro: param.isMacro\n    })));\n    // Reset cookie parameter selection when parsing new parameters\n    setCookieParamIndex(null);\n  };\n\n  const onSubmit = (data) => {\n    const formData = {\n      ...data,\n      queryParams: queryParams.filter(param => param.name.trim() !== ''),\n      cookieParamIndex: cookieParamIndex\n    };\n    \n    const validation = validateFormData(formData);\n    if (validation.isValid) {\n      // Form is valid, user can copy the URL\n      console.log('Form submitted successfully:', formData);\n      console.log('Built URL:', builtUrl);\n    } else {\n      console.log('Form validation errors:', validation.errors);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 space-y-8\">\n      <div className=\"text-center space-y-2\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">\n          Redirect Query Parameter Builder\n        </h1>\n        <p className=\"text-gray-600\">\n          Build and validate redirect URLs with proper query parameter encoding for user-sync pixels\n        </p>\n      </div>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-8\">\n        {/* Step 0: URL Parser (Optional) */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6 space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-purple-500 text-white rounded-full flex items-center justify-center text-sm font-semibold\">\n              ⚡\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Quick Start - Parse Existing URL</h2>\n            <span className=\"text-sm text-gray-500 font-normal\">(Optional)</span>\n          </div>\n          \n          <UrlParser\n            onParseUrl={handleParseUrl}\n            onParseParams={handleParseParams}\n          />\n        </div>\n\n        {/* Step 1: Base Redirect URL */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6 space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-semibold\">\n              1\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Base Redirect URL</h2>\n          </div>\n          \n          <UrlInput\n            register={register}\n            error={errors.redirectUrl}\n            placeholder=\"https://example.com/sync\"\n          />\n        </div>\n\n        {/* Step 2: Query Parameters & Cookie Selection */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6 space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-semibold\">\n              2\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Query Parameters & Cookie Selection</h2>\n          </div>\n          \n          <QueryParamBuilder\n            queryParams={queryParams}\n            onAdd={handleAddQueryParam}\n            onRemove={handleRemoveQueryParam}\n            onUpdate={handleUpdateQueryParam}\n            onAddPreset={handleAddPreset}\n            presets={getQueryParamPresets()}\n            cookieParamIndex={cookieParamIndex}\n            onCookieParamChange={handleCookieParamChange}\n          />\n        </div>\n\n        {/* Step 3: Preview & Validation */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6 space-y-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-green-500 text-white rounded-full flex items-center justify-center text-sm font-semibold\">\n              3\n            </div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Preview & Validation</h2>\n          </div>\n          \n          <PreviewPanel\n            url={builtUrl}\n            error={urlError}\n            isBuilding={isBuilding}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}